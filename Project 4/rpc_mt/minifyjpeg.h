/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _MINIFYJPEG_H_RPCGEN
#define _MINIFYJPEG_H_RPCGEN

#include <rpc/rpc.h>

#include <pthread.h>

#include "steque.h"
#include <stdbool.h>

#ifdef __cplusplus
extern "C" {
#endif

#define BUFFER_SIZE 6200

steque_t *requestQueue;


typedef struct {
  pthread_cond_t  cond;
  pthread_mutex_t mutex;
  pthread_cond_t  fCond;
  pthread_mutex_t fMutex;
}locks_t;

locks_t *g_locks;

typedef struct  {
  pthread_t       hThread;
  int             threadState; //READY/WAIT --TODO: Convert to ENUM?
  bool            IsEnabled; // Used to kill threads and exit saefe.
}threadInfo_t;

struct JPEG_IN {
	struct {
		u_int buffer_len;
		char *buffer_val;
	} buffer;
};
typedef struct JPEG_IN JPEG_IN;

struct JPEG_OUT {
	struct {
		u_int buffer_len;
		char *buffer_val;
	} buffer;
};
typedef struct JPEG_OUT JPEG_OUT;

typedef struct  {  
  xdrproc_t       *xdr_argument;
  SVCXPRT         *transp;
  struct svc_req  *svcReq;
  JPEG_IN         jpeg_in_arg;
}minifyRequest_t;

#define MINIFY_PROG 0x3f230001
#define MINIFY_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define MINIFY_JPEG_PROC 1
extern  enum clnt_stat minify_jpeg_proc_1(JPEG_IN , JPEG_OUT *, CLIENT *);
extern  bool_t minify_jpeg_proc_1_svc(JPEG_IN , xdrproc_t *, struct svc_req *, SVCXPRT *);
extern int minify_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define MINIFY_JPEG_PROC 1
extern  enum clnt_stat minify_jpeg_proc_1();
extern  bool_t minify_jpeg_proc_1_svc();
extern int minify_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_JPEG_IN (XDR *, JPEG_IN*);
extern  bool_t xdr_JPEG_OUT (XDR *, JPEG_OUT*);

#else /* K&R C */
extern bool_t xdr_JPEG_IN ();
extern bool_t xdr_JPEG_OUT ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_MINIFYJPEG_H_RPCGEN */
